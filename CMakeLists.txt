# Define a project if this file wasn't included.
if(NOT CMAKE_PROJECT_NAME OR "${CMAKE_PROJECT_NAME}" MATCHES "^RadonFrameworkEnterprise$")
    cmake_minimum_required(VERSION 2.8.11)
    project(RadonFrameworkEnterprise)
    # put the libraries to the dist directory
    set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/dist)
    set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/dist)
    set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/dist)    
endif()

include("Integrate.cmake")
rcf_addpackage(radonframework "dev")
rcf_addpackage(rf_console "dev")
#set(RFE_COMPILER_EXPORT_AS_MODULE ON CACHE BOOL "Generate the project as module(Default: off)" FORCE)
rcf_generate(module RFE RadonFrameworkEnterprise "Framework")
    rcf_add_recursive("src/" "Source")
    rcf_add_recursive("include/RadonFrameworkEnterprise/" "Includes")
    rcf_add_public_include("${CMAKE_CURRENT_SOURCE_DIR}/include/")
    rcf_dependencies(RadonFramework RadonFrameworkConsole)
rcf_endgenerate()

option(RFE_BUILD_TEST "Enable the tests." OFF)
if(RFE_BUILD_TEST)
#    rcf_add_subdirectory_once("tests/ResourceTest/")
#    rcf_add_subdirectory_once("tests/HTTP2/")
    rcf_add_subdirectory_once("tests/")
endif()